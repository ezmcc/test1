const { Readable } = require('stream')

const _isString = v => typeof v === 'string'

const _isBoolean = v => typeof v === 'boolean'

const _isNumber = v => typeof v === 'number'

const _isNumberish = v => !!Number(v) || v === 0 //> string representation of number is ok, e.g., '1e3'

const _isDate = v => !!Date.parse(v)

const _isTime = v => !!Date.parse('2000-01-01T' + v)

const _isBuffer = v => Buffer.isBuffer(v) || v.type === 'Buffer' || _isString(v) //> base64 encoded string is ok as well

const _isStreamOrBuffer = v => v instanceof Readable || _isBuffer(v)

module.exports = {
  'cds.UUID': _isString,
  'cds.Boolean': _isBoolean,
  'cds.Integer': _isNumber,
  'cds.UInt8': _isNumber,
  'cds.Int16': _isNumber,
  'cds.Int32': _isNumber,
  'cds.Integer64': _isNumberish,
  'cds.Int64': _isNumberish,
  'cds.Decimal': _isNumberish,
  'cds.DecimalFloat': _isNumber,
  'cds.Double': _isNumber,
  'cds.Date': _isDate,
  'cds.Time': _isTime,
  'cds.DateTime': _isDate,
  'cds.Timestamp': _isDate,
  'cds.String': _isString,
  'cds.Binary': _isBuffer,
  'cds.LargeString': _isString,
  'cds.LargeBinary': _isStreamOrBuffer
}
